
#服务端口
server:
  port: 5000


#服务名
spring:
  application:
    name: cloud-gateway
  cloud:
    # spring cloud gateway 路由配置方式
    gateway:
      #是否与服务发现组件进行结合，通过 serviceId(必须设置成大写) 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
      discovery:
        #路由访问方式：http://Gateway_HOST:Gateway_PORT/大写的serviceId/**，其中微服务应用名默认大写访问。
        locator:
          enabled: true
          #配置完成之后我们就可以通过小写的服务名称进行访问
          lower-case-service-id: true
      filter:
        remove-non-proxy-headers:
          headers:
            - dummy
      routes:
        - id:  cloud-provider-1
          # 重点！/info必须使用http进行转发，lb代表从注册中心获取服务
          uri: lb://cloud-provider-1
          predicates:
            # 重点！转发该路径！,/userapi/**,
            - Path=/cloudprovider1/*/*
          # http://localhost:6601/cloudprovider1/user/users/2, 必须加上StripPrefix=1，否则访问服务时会带上cloudprovider1
          #而不是我们期望的去掉cloudprovider1，只保留**部分
          filters:
            - StripPrefix=1
        - id:  cloud-provider-2
          uri: lb://cloud-provider-2
          predicates:
            - Path=/cloudprovider2/*/*
          filters:
            - StripPrefix=1


#注册中心配置
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:9000/eureka/
